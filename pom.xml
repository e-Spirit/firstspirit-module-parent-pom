<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>firstspirit-module-parent-pom</artifactId>
    <version>2.1.2</version>
    <packaging>pom</packaging>

    <organization>
        <name>e-Spirit AG</name>
        <url>http://www.e-spirit.com/</url>
    </organization>

    <parent>
        <groupId>com.espirit.ps.maven</groupId>
        <artifactId>firstspirit-base-parent-pom</artifactId>
        <version>1.0.0</version>
    </parent>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.groovy.maven</groupId>
                    <artifactId>gmaven-plugin</artifactId>
                    <version>1.0</version>
                    <executions>
                        <execution>
                            <id>get-resource-filenames</id>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>execute</goal>
                            </goals>
                            <configuration>
                                <source>
                                <![CDATA[
                                    // Duplicate model in a Mavenproject, allowing to get associated artifacts and filenames
                                    // More info here : http://maven.apache.org/ref/3.0.3/maven-core/apidocs/org/apache/maven/project/MavenProject.html
                                    def mavenProject = new org.apache.maven.project.MavenProject(project)
                                    def dependencies = mavenProject.getArtifacts() // gets also transitive ones
                                    def artifacts = ""
                                    def artifactsModule = ""
                                    def artifactsRuntime = ""

                                    dependencies.each {
                                        // More infos on Dependency there : http://maven.apache.org/ref/3.0.3/maven-model/apidocs/org/apache/maven/model/Dependency.html

                                        // dependencies for service
                                        if (it.getScope().equals("compile")) {
                                            // More infos on Artifact there : http://maven.apache.org/ref/3.0.3/maven-artifact/apidocs/org/apache/maven/artifact/Artifact.html
                                            def artifact = mavenProject.getArtifacts().find { artifact -> artifact.getArtifactId() == it.getArtifactId() }
                                            artifacts = artifacts + "<resource>lib/" + artifact.getFile().getName() + "</resource>\n"
                                            artifactsModule = artifactsModule + "<resource scope=\"module\">lib/" + artifact.getFile().getName() + "</resource>\n"
                                        }

                                        // dependencies for webapplication
                                        if (it.getScope().equals("runtime")) {
                                            // More infos on Artifact there : http://maven.apache.org/ref/3.0.3/maven-artifact/apidocs/org/apache/maven/artifact/Artifact.html
                                            def artifact = mavenProject.getArtifacts().find { artifact -> artifact.getArtifactId() == it.getArtifactId() }
                                            artifactsRuntime = artifactsRuntime + "<resource>lib/" + artifact.getFile().getName() + "</resource>\n"
                                        }
                                    }
                                    // Write resources to a maven property
                                    project.properties['resources'] = artifacts
                                    project.properties['resourcesModule'] = artifactsModule
                                    project.properties['resourcesRuntime'] = artifactsRuntime

                                    println "module-resources can be found at " + project.properties['resourcesModule']
                                    println "service-resources can be found at " + project.properties['resources']
                                    println "webapp-resources can be found at " + project.properties['resourcesRuntime']
                                    ]]>
                            </source>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <dependencies>
                        <dependency>
                            <groupId>com.espirit.ps.maven</groupId>
                            <artifactId>fsm-assembly</artifactId>
                            <version>1.0.0</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>fsm-dependencies</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                            <configuration>
                                <descriptorRefs>
                                    <descriptorRef>fsm-assembly</descriptorRef>
                                </descriptorRefs>
                                <appendAssemblyId>true</appendAssemblyId>
                                <finalName>${project.artifactId}-${project.version}</finalName>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.4</version>
                    <executions>
                        <execution>
                            <id>rename</id>
                            <phase>package</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <tasks>
                                    <property name="compile_classpath" refid="maven.compile.classpath"/>
                                    <property name="runtime_classpath" refid="maven.runtime.classpath"/>
                                    <property name="test_classpath" refid="maven.test.classpath"/>
                                    <property name="plugin_classpath" refid="maven.plugin.classpath"/>
                                    <move file="target/${project.artifactId}-${project.version}-fsm.zip"
                                          tofile="target/${project.artifactId}-${project.version}.fsm"/>
                                </tasks>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.7</version>
                    <configuration>
                        <artifacts>
                            <artifact>
                                <file>target/${project.artifactId}-${project.version}.fsm</file>
                                <type>fsm</type>
                            </artifact>
                        </artifacts>
                        <name/>
                        <regex/>
                        <replacement/>
                        <value/>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>deploy</phase>
                            <goals>
                                <goal>attach-artifact</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.4.3</version>
                    <executions>
                        <execution>
                            <id>replace-pom-placeholder</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>${basedir}</directory>
                                        <includes>
                                            <include>pom.xml</include>
                                        </includes>
                                        <filtering>true</filtering>
                                    </resource>
                                </resources>
                                <outputDirectory>${project.build.directory}/pom-install-deploy-fix</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>firstspirit-module-create</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.groovy.maven</groupId>
                        <artifactId>gmaven-plugin</artifactId>
                        <inherited>true</inherited>
                    </plugin>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <inherited>true</inherited>
                    </plugin>
                    <plugin>
                        <artifactId>maven-install-plugin</artifactId>
                        <version>2.3.1</version>
                        <executions>
                            <execution>
                                <id>overwrite-pom</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>install-file</goal>
                                </goals>
                                <configuration>
                                    <packaging>pom</packaging>
                                    <file>target/pom-install-deploy-fix/pom.xml</file>
                                    <pomFile>target/pom-install-deploy-fix/pom.xml</pomFile>
                                    <version>${project.version}</version>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <inherited>true</inherited>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <inherited>true</inherited>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <inherited>true</inherited>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>firstspirit-module-install</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.espirit.ps.maven</groupId>
                        <artifactId>fsmoduleinstaller-maven-plugin</artifactId>
                        <version>${fsmoduleinstaller.version}</version>
                        <executions>
                            <execution>
                                <id>install-module</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>install</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <moduleFile>${project.build.directory}/${project.artifactId}-${project.version}.fsm</moduleFile>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
